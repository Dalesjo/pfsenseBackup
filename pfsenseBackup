#!/bin/bash

while getopts 'n:d:h:u:p:' flag; do
  case "${flag}" in
    d) directory="${OPTARG}" ;;
    h) host="${OPTARG}" ;;
    u) username="${OPTARG}" ;;
    p) password="${OPTARG}" ;;
  esac
done

if [ -z $directory ] || [ -z $host ] || [ -z $username ] || [ -z $password ] ; then
	echo "pfsenseBackup [OPTIONS...]"
	echo "";
	echo "Backup a remote pfSense 2.3.3 or later."
	echo "";
	echo "Flags:";
	echo "  -d    Directory you want your backups to be saved in"
	echo "  -h    IP Address or hostname to your pfsense"
	echo "  -u    username to your pfsense"
	echo "  -p    password to your pfsense"
	echo "";
	echo "Example:";
	echo "pfsenseBackup -d /var/backup/pfsense/ -h 192.168.0.1 -u admin -p mypassword"
	exit 1;
fi;

if [ ! -d "$directory" ] && [ ! -w "$directory" ] ; then
  echo "$directory does not exist or is not writable by this user $USER" ;
  exit 2;
fi;

if ! hash wget 2>/dev/null; then
  echo "wget is required, plase install, for centos 7 run 'yum install wget -y'"
  exit 3;
fi

if ! hash gzip 2>/dev/null; then
  echo "gzip is required, plase install, for centos 7 run 'yum install gzip -y'"
  exit 3;
fi

date=`date +%Y%m%d-%H%M%S`;
backupFile=config-$host-`date +%Y%m%d-%H%M%S`.xml;

# Getting backup
cd $directory;
umask 0027;

wget -qO- -t 3 --timeout=60 --keep-session-cookies --save-cookies cookies.tmp \
  --no-check-certificate https://$host/diag_backup.php \
  | grep "name='__csrf_magic'" | sed 's/.*value="\(.*\)".*/\1/' > csrf.1.tmp

wget -qO- -t 3 --timeout=60 --keep-session-cookies --load-cookies cookies.tmp \
  --save-cookies cookies.tmp --no-check-certificate \
  --post-data "login=Login&usernamefld=$username&passwordfld=$password&__csrf_magic=$(cat csrf.1.tmp)" \
  https://$host/diag_backup.php  | grep "name='__csrf_magic'" \
  | sed 's/.*value="\(.*\)".*/\1/' > csrf.2.tmp

wget -qO- -t 3 --timeout=60 --keep-session-cookies --load-cookies cookies.tmp --no-check-certificate \
  --post-data "download=download&donotbackuprrd=yes&__csrf_magic=$(head -n 1 csrf.2.tmp)" \
  https://$host/diag_backup.php -O $backupFile

# Cleanup
rm cookies.tmp csrf.1.tmp csrf.2.tmp

# Validation
if [ ! -f "$backupFile" ] ; then
  echo "Backupfile $backupFile not downloaded";
  exit 4;
fi;

if grep -xq "<pfsense>" "$backupFile" ; then
    gzip $backupFile;
    exit 0;
else
    # code if not found
    rm $backupFile;
    echo "<pfsense> not found in config, corrupt configfile";
    echo "Possible reason: wrong credentials are used to login against pfsense";
    exit 5;
fi
