#!/bin/bash

# Default settings
port=443
daily=0
ping=0
tmp="/tmp"

while getopts 'd:Dh:p:P:t:u:q' flag; do
  case "${flag}" in
    d) directory="${OPTARG}" ;;
    D) daily=1 ;;
    h) host="${OPTARG}" ;;
    p) password="${OPTARG}" ;;
    P) port="${OPTARG}" ;;
    t) tmp="${OPTARG}" ;;
    u) username="${OPTARG}" ;;
    q) ping=1;;
  esac
done

if [ -z $directory ] || [ -z $host ] || [ -z $username ] || [ -z $password ] ; then
	echo "pfsenseBackup [OPTIONS...]"
	echo "";
	echo "Backup a remote pfSense 2.3.3 or later."
  echo "Backup is done over https"
	echo "";
	echo "Flags:";
	echo "  -d    Directory you want your backups to be saved in"
  echo "  -D    Only backup if there is not backup for the same date yet."
  echo "  -h    IP Address or hostname to your pfsense"
	echo "  -p    Password to your pfsense"
  echo "  -P    Port used to connect to your pfsense, default is 443"
  echo "  -t    tmp directory used then creating backup, default is /tmp"
  echo "  -q    Quitly exits with exitcode 0 if pfsense is not responding to ping"
  echo "  -u    Username to your pfsense"
	echo "";
	echo "Example:";
	echo "pfsenseBackup -d /var/backup/pfsense/ -h 192.168.0.1 -P 443 -u admin -p mypassword -D"
	exit 1;
fi;

if [ ! -d "$tmp" ]  && [ ! -w "$tmp" ] ; then
    echo "$tmp does not exist or is not writable by this user $USER";
    exit 8;
fi;

if [ ! -d "$directory" ] && [ ! -w "$directory" ] ; then
  echo "$directory does not exist or is not writable by this user $USER" ;
  exit 2;
fi;

if ! hash wget 2>/dev/null; then
  echo "wget is required, plase install, for centos 7 run 'yum install wget -y'"
  exit 3;
fi

if ! hash gzip 2>/dev/null; then
  echo "gzip is required, plase install, for centos 7 run 'yum install gzip -y'"
  exit 4;
fi

date=`date +%Y%m%d-%H%M%S`;
backupFile=config-$host-`date +%Y%m%d-%H%M%S`.xml;
today=config-$host-`date +%Y%m%d-`
md5File=checksums-$host.md5;
random=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1);

# going to backupdirectory
cd $directory;
umask 0077;

# Checking if backup file already exists for today
if [ $daily -eq "1" ] ; then
  if ! find $directory -type f -name "$today*" -exec false {} + ; then
    exit;
  fi;
fi;

# check if firewall is responding to ping
if [ $ping -eq "1" ] ; then
  if ! ping -w 4 -c 1 $host > /dev/null 2>&1 ; then
    exit
  fi;
fi;

wget -qO- -t 3 --timeout=6 --keep-session-cookies --save-cookies $tmp/pfsenseBackupCookies.$random.tmp \
  --no-check-certificate https://$host:$port/diag_backup.php \
  | grep "name='__csrf_magic'" | sed 's/.*value="\(.*\)".*/\1/' > $tmp/pfsenseBackupCookies.$random.csrf.1.tmp

# ${PIPESTATUS[0]} can only be used once (changes on next lines execution)
connection=${PIPESTATUS[0]}

if [ $connection -eq "0" ] ; then

  wget -qO- -t 3 --timeout=30 --waitretry=1 --keep-session-cookies --load-cookies $tmp/pfsenseBackupCookies.$random.tmp \
    --save-cookies $tmp/pfsenseBackupCookies.$random.tmp --no-check-certificate \
    --post-data "login=Login&usernamefld=$username&passwordfld=$password&__csrf_magic=$(cat $tmp/pfsenseBackupCookies.$random.csrf.1.tmp)" \
    https://$host:$port/diag_backup.php  | grep "name='__csrf_magic'" \
    | sed 's/.*value="\(.*\)".*/\1/' > $tmp/pfsenseBackupCookies.$random.csrf.2.tmp

  wget -qO- -t 3 --timeout=30 --keep-session-cookies --load-cookies $tmp/pfsenseBackupCookies.$random.tmp --no-check-certificate \
    --post-data "download=download&donotbackuprrd=yes&__csrf_magic=$(head -n 1 $tmp/pfsenseBackupCookies.$random.csrf.2.tmp)" \
    https://$host:$port/diag_backup.php -O $backupFile

  # Cleanup
  rm $tmp/pfsenseBackupCookies.$random.tmp $tmp/pfsenseBackupCookies.$random.csrf.1.tmp $tmp/pfsenseBackupCookies.$random.csrf.2.tmp

  # Validation
  if [ ! -f "$backupFile" ] ; then
    echo "Backupfile $backupFile not downloaded";
    exit 5;
  fi;

  if grep -xq "<pfsense>" "$backupFile" ; then
      gzip $backupFile;
      md5sum $backupFile.gz >> $md5File

      exit 0;
  else
      # code if not found
      rm $backupFile;
      echo "<pfsense> not found in config, corrupt configfile";
      echo "Possible reason: wrong credentials are used to login against pfsense";
      exit 6;
  fi
else
  echo "Server $host did not respond on port $port please check your configuration";
  exit 7;
fi;
